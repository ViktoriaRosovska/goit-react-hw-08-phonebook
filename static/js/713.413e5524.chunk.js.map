{"version":3,"file":"static/js/713.413e5524.chunk.js","mappings":"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","sources":["pages/SignUp.js"],"sourcesContent":["import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { signup } from 'redux/auth/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { selectIsLoggedIn } from 'redux/auth/authSelectors';\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {'Copyright Â© '}\n      <Link\n        color=\"inherit\"\n        href=\"https://www.linkedin.com/in/viktoria-rosovska/\"\n        target=\"_blank\"\n      >\n        Created by Viktoriia Rosovska\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\n// TODO remove, this demo shouldn't need to reset the theme.\n\nconst defaultTheme = createTheme();\n\nexport default function SignUp() {\n  const isAuth = useSelector(selectIsLoggedIn);\n  const dispatch = useDispatch();\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const user = {\n      name: data.get('firstName') + ' ' + data.get('lastName'),\n      email: data.get('email'),\n      password: data.get('password'),\n    };\n    // console.log({\n    //   name: data.get('firstName') + ' ' + data.get('lastName'),\n    //   email: data.get('email'),\n    //   password: data.get('password'),\n    // });\n    dispatch(signup(user));\n    event.currentTarget.reset();\n  };\n\n  return (\n    <>\n      {isAuth && <Navigate to={'/contacts'} />}\n      <ThemeProvider theme={defaultTheme}>\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n          <Box\n            sx={{\n              marginTop: 8,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign up\n            </Typography>\n            <Box\n              component=\"form\"\n              noValidate\n              onSubmit={handleSubmit}\n              sx={{ mt: 3 }}\n            >\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    autoComplete=\"given-name\"\n                    name=\"firstName\"\n                    required\n                    fullWidth\n                    id=\"firstName\"\n                    label=\"First Name\"\n                    autoFocus\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    required\n                    fullWidth\n                    id=\"lastName\"\n                    label=\"Last Name\"\n                    name=\"lastName\"\n                    autoComplete=\"family-name\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"new-password\"\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Sign Up\n              </Button>\n              <Grid container justifyContent=\"flex-end\">\n                <Grid item>\n                  <Link href=\"./signIn\" variant=\"body2\">\n                    Already have an account? Sign in\n                  </Link>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n          <Copyright sx={{ mt: 5 }} />\n        </Container>\n      </ThemeProvider>\n    </>\n  );\n}\n"],"names":["Copyright","props","_jsxs","Typography","_objectSpread","variant","color","align","children","_jsx","Link","href","target","Date","getFullYear","defaultTheme","createTheme","SignUp","isAuth","useSelector","selectIsLoggedIn","dispatch","useDispatch","_Fragment","Navigate","to","ThemeProvider","theme","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlinedIcon","noValidate","onSubmit","event","preventDefault","data","FormData","currentTarget","user","name","get","email","password","signup","reset","mt","Grid","container","spacing","item","xs","sm","TextField","autoComplete","required","fullWidth","id","label","autoFocus","type","Button","mb","justifyContent"],"sourceRoot":""}