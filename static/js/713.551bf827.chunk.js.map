{"version":3,"file":"static/js/713.551bf827.chunk.js","mappings":"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","sources":["pages/SignUp.js"],"sourcesContent":["import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { signup } from '../redux/auth/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { selectIsLoggedIn } from '../redux/auth/authSelectors';\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {'Copyright Â© '}\n      <Link\n        color=\"inherit\"\n        href=\"https://www.linkedin.com/in/viktoria-rosovska/\"\n        target=\"_blank\"\n      >\n        Created by Viktoriia Rosovska\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nexport default function SignUp() {\n  const isAuth = useSelector(selectIsLoggedIn);\n  const dispatch = useDispatch();\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const user = {\n      name: data.get('firstName') + ' ' + data.get('lastName'),\n      email: data.get('email'),\n      password: data.get('password'),\n    };\n    console.log({\n      name: data.get('firstName') + ' ' + data.get('lastName'),\n      email: data.get('email'),\n      password: data.get('password'),\n    });\n    dispatch(signup(user));\n    event.currentTarget.reset();\n  };\n  if (isAuth) return <Navigate to=\"/contacts\" />;\n  return (\n    <>\n      {' '}\n      <Box\n        sx={{\n          height: '400px',\n          backgroundColor: 'white',\n          borderRadius: '15px',\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n      >\n        <Box\n          sx={{\n            width: '400px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n\n            padding: '20px',\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleSubmit}\n            sx={{ mt: 2 }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6} style={{ alignItems: 'center' }}>\n                {' '}\n                <TextField\n                  autoComplete=\"given-name\"\n                  name=\"firstName\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                  autoFocus\n                  inputProps={{\n                    style: {\n                      height: '5px',\n                    },\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastName\"\n                  autoComplete=\"family-name\"\n                  inputProps={{\n                    style: { height: '5px' },\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  inputProps={{\n                    style: { height: '5px' },\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                  inputProps={{\n                    style: { height: '5px' },\n                  }}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link href=\"./signIn\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n            <Copyright sx={{ mt: 5 }} />\n          </Box>\n        </Box>\n      </Box>\n    </>\n  );\n}\n"],"names":["Copyright","props","_jsxs","Typography","_objectSpread","variant","color","align","children","_jsx","Link","href","target","Date","getFullYear","SignUp","isAuth","useSelector","selectIsLoggedIn","dispatch","useDispatch","Navigate","to","_Fragment","Box","sx","height","backgroundColor","borderRadius","display","justifyContent","width","flexDirection","alignItems","padding","component","noValidate","onSubmit","event","preventDefault","data","FormData","currentTarget","user","name","get","email","password","console","log","signup","reset","mt","Grid","container","spacing","item","xs","sm","style","TextField","autoComplete","required","fullWidth","id","label","autoFocus","inputProps","type","Button","mb"],"sourceRoot":""}